// Generated by CoffeeScript 1.3.1
(function() {
  var app, assert, express, request;

  require('../_helper');

  express = require('express');

  assert = require('assert');

  request = require('request');

  app = require("../../server");

  describe('authentication', function() {
    describe('GET /login', function() {
      var body;
      body = null;
      before(function(done) {
        return request({
          uri: "http://localhost:" + app.settings.port + "/login"
        }, function(err, response, _body) {
          body = _body;
          return done();
        });
      });
      it("has title", function() {
        return assert.hasTag(body, '//head/title', 'Hot Pie - Login');
      });
      it("has user field", function() {
        return assert.hasTag(body, '//input[@name="user"]', '');
      });
      return it("has password field", function() {
        return assert.hasTag(body, '//input[@name="password"]', '');
      });
    });
    describe("POST /sessions", function() {
      describe("incorrect credentials", function() {
        var body, response, _ref;
        _ref = [null, null], body = _ref[0], response = _ref[1];
        before(function(done) {
          var options;
          options = {
            uri: "http://localhost:" + app.settings.port + "/sessions",
            form: {
              user: 'incorrect user',
              password: 'incorrect password'
            },
            followAllRedirects: true
          };
          return request.post(options, function(err, _response, _body) {
            var _ref1;
            _ref1 = [_body, _response], body = _ref1[0], response = _ref1[1];
            return done();
          });
        });
        return it("shows flash message", function() {
          var errorText;
          errorText = 'Those credentials were incorrect. Please login again.';
          return assert.hasTag(body, "//p[@class='flash error']", errorText);
        });
      });
      return describe("correct credentials", function() {
        var body, response, _ref;
        _ref = [null, null], body = _ref[0], response = _ref[1];
        before(function(done) {
          var options;
          options = {
            uri: "http://localhost:" + app.settings.port + "/sessions",
            form: {
              user: 'piechef',
              password: '12345'
            },
            followAllRedirects: true
          };
          return request.post(options, function(err, _response, _body) {
            var _ref1;
            _ref1 = [_body, _response], body = _ref1[0], response = _ref1[1];
            return done();
          });
        });
        return it("shows flash message", function() {
          var errorText;
          errorText = 'You are now logged in as piechef.';
          return assert.hasTag(body, "//p[@class='flash info']", errorText);
        });
      });
    });
    return describe("DELETE /sessions", function() {
      var body, response, _ref;
      _ref = [null, null], body = _ref[0], response = _ref[1];
      before(function(done) {
        var options;
        options = {
          uri: "http://localhost:" + app.settings.port + "/sessions",
          followAllRedirects: true
        };
        return request.del(options, function(err, _response, _body) {
          var _ref1;
          _ref1 = [_body, _response], body = _ref1[0], response = _ref1[1];
          return done();
        });
      });
      return it("shows flash message", function() {
        var errorText;
        errorText = 'You have been logged out.';
        return assert.hasTag(body, "//p[@class='flash info']", errorText);
      });
    });
  });

}).call(this);
